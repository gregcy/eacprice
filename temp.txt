<tr>
                    <td colspan="3" class="text-xs"><a href="{{ $sources[0] }}" target="_blank">1. {{ __('Domestic Use Tariffs') }}</a></td>
                </tr>
                <tr>
                    <td colspan="3" class="text-xs"><a href="{{ $sources[1] }}" target="_blank">2. {{ __('Fuel Ajustment Clause') }}</a></td>
                </tr>
                <tr>
                    <td colspan="3" class="text-xs"><a href="{{ $sources[2] }}" target="_blank">3. {{ __('Public Service Obligation') }}</a></td>
                </tr>



                <script type="module">
                    const total = {{ number_format($cost['total'],2,'.','') }};
                    const data = {
                        labels: [
                            @isset($cost['energyCharge'])
                                '{{ __('Electricity Generation') }}',
                            @endisset
                            @isset($cost['networkCharge'])
                                '{{ __('Network Usage') }}',
                            @endisset
                            @isset($cost['ancillaryServices'])
                                '{{ __('Ancillary Services') }}',
                            @endisset
                            @isset($cost['meterReading'])
                                '{{ __('Meter Reading') }}',
                            @endisset
                            @isset($cost['supplyCharge'])
                                '{{ __('Supply Charge') }}',
                            @endisset
                            @isset($cost['publicServiceObligation'])
                                '{{ __('Public Service Obligation') }}',
                            @endisset
                            @isset($cost['fuelAdjustment'])
                                '{{ __('Fuel Adjustment') }}',
                            @endisset

                            '{{ __('VAT') }}'],
                        datasets: [{
                            label: '{{ __('Cost') }}',
                            data: [
                                @php
                                    array_pop($cost);
                                    echo implode(',', $cost);
                                @endphp
                            ],
                            backgroundColor: [
                            '#36a2eb',
                            '#ff6384',
                            '#ff9f40',
                            '#ffe29d',
                            '#4bc0c0',
                            '#9966ff',
                            '#c8cace',
                            '#4FF0CE',
                            '#388c12'
                            ],
                            borderWidth: 1
                        }],
                    };
                    const doughnutLabel = {
                        id: 'doughnutLabel',
                        beforeDatasetsDraw(chart, args, pluginOptions) {
                            const { ctx, data} = chart;

                            ctx.save();
                            const xCoor = chart.getDatasetMeta(0).data[0].x;
                            const yCoor = chart.getDatasetMeta(0).data[0].y;
                            ctx.font = 'bold 25px sans-serif';
                            ctx.fillStyle = 'rgba(54,162,235,1)';
                            ctx.textAlign = 'center';
                            ctx.textBaseline = 'middle';
                            ctx.fillText('â‚¬'+total.toFixed(2), xCoor, yCoor);
                        }
                    }
                    const config = {
                        type: 'doughnut',
                        data,
                        options: {
                            plugins: {
                                legend: {
                                    display: false
                                },
                                tooltip: {
                                    callbacks: {
                                        label: function(context) {
                                            let label = context.dataset.label || '';

                                            if (label) {
                                                label += ': ';
                                            }
                                            if (context.parsed !== null) {
                                                label += new Intl.NumberFormat('en-US', { style: 'currency', currency: 'EUR' }).format(context.parsed);
                                            }
                                            return label;
                                        }
                                    }
                                }
                            }

                        },
                        plugins: [doughnutLabel]
                    };

                    const myChart = new Chart(
                        document.getElementById('myChart'),
                        config
                    );

                </script>

